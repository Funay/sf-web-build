{"version":3,"sources":["assets/images/LOGO2.png","assets/images/lady-justice.png","assets/images/icons/gerar-rpv-icon.svg","assets/images/icons/buscar-rpv-icon.svg","pages/Landing/index.tsx","components/input/index.tsx","service/functions.ts","service/RPV.ts","components/report/index.tsx","assets/images/icons/warning.svg","assets/images/icons/back.svg","assets/images/sf-logo-min.svg","components/PageHeader/index.tsx","components/Select/index.tsx","pages/RPVGenerator/index.tsx","pages/RPVSearch/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["Landing","id","className","src","logoIMG","alt","ladyIMG","to","gerarRPV","buscarRPV","Input","label","name","rest","htmlFor","type","getFloatMoney","value","replace","parseFloat","toFixed","formCurrency","Intl","NumberFormat","style","maximumFractionDigits","minimumFractionDigits","currency","float","toString","getDate","today","Date","getFullYear","getMonth","slice","getDateBRFormat","data","ano","split","mes","dia","getContractFees","percent","valuePercentFees","total","totalValue","result","format","getBenefits","valueBenefits","qtd","percentBenefit","parseInt","qtdBenefits","typeBenefit","getDisconts","totalDiscount","discountType","discountValue","initialFees","getFinalBalanceFees","benefits","fees","initial","discount","getFinalBalanceRPV","getDateExtense","date","ano_informado","mes_informado","mess","getMes","getDateFormatBR","Report","descontoline","text","height","bold","alignment","feesContractQTD","lineHeight","feesContractPercent","table1","splice","pdfmake","vfs","pdfFonts","pdfMake","docDefinitions","pageSize","content","fontSize","margin","decoration","clientName","toUpperCase","clientCPF","courtroom","processNumber","table","widths","body","surveydate","extenso","mode","lawyerName","columns","createPdf","download","PageHeader","props","backIcon","logoMin","title","description","Select","defaultOption","options","disabled","hidden","map","option","RPVGenerate","useState","page","setPage","setDate","setSurveyDate","setTypeBenefit","setPercentBenefit","setLawyerName","setClientName","setClientCPF","setCourtroom","setProcessNumber","setTotalvalue","setValuePercentFees","setQtdBenefits","setValueBenefits","setInitialFees","setDiscountValue","setDiscountType","totalBenefits","OnBoardingFive","onSubmit","e","preventDefault","Steps","current","Item","onChange","target","decimalSeparator","thousandSeparator","isNumericString","decimalScale","warning","onClick","RPVSearch","Routes","path","exact","component","RPVGenerator","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1be5b330.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/LOGO2.076add7f.png\";","export default __webpack_public_path__ + \"static/media/lady-justice.5319d361.png\";","export default __webpack_public_path__ + \"static/media/gerar-rpv-icon.0144941b.svg\";","export default __webpack_public_path__ + \"static/media/buscar-rpv-icon.bfd7dc12.svg\";","import React from \"react\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport logoIMG from \"../../assets/images/LOGO2.png\";\r\nimport ladyIMG from \"../../assets/images/lady-justice.png\";\r\nimport gerarRPV from \"../../assets/images/icons/gerar-rpv-icon.svg\";\r\nimport buscarRPV from \"../../assets/images/icons/buscar-rpv-icon.svg\";\r\n\r\nimport './style.css'\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div id=\"page-landing\">\r\n      <div id=\"page-landing-content\" className=\"container\">\r\n        <div className=\"logo-container\">\r\n          <img src={logoIMG} alt=\"silva e freitas\" />\r\n        </div>\r\n        <div className=\"lady-container\">\r\n          <img src={ladyIMG} alt=\"dama da justiça\" className=\"lady-image\"/>\r\n        </div>\r\n        <div className=\"buttons-container\">\r\n          <Link to=\"/rpv-generate\" className=\"gerarRPV\">\r\n            <img id=\"gerarRPV\" src={gerarRPV} alt=\"dama da justiça\" className=\"iconbuttom\"/>\r\n            GERAR RPV\r\n          </Link>\r\n          <Link to=\"/rpv-search\" className=\"buscarRPV\">\r\n            <img id=\"BuscarRPV\" src={buscarRPV} alt=\"dama da justiça\" className=\"iconbuttom\"/>\r\n            BUSCAR RPV\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Landing;","import React, { InputHTMLAttributes }from \"react\";\r\n\r\nimport \"./styles.css\"\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement>{\r\n  label?: string;\r\n  name: string;\r\n  mask?: string;\r\n}\r\n\r\n\r\nconst Input:React.FC<InputProps> = ({label, name, ...rest}) => {\r\n  return (\r\n    <div className=\"input-block\">\r\n      {label && <label htmlFor={name}>{label}</label>}\r\n      <input type=\"text\" id={name} {...rest}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input;","export function getFloatMoney(value: string) {\r\n  value = value.replace('.', '')\r\n  value = value.replace(',', '.')\r\n  return parseFloat(value).toFixed(2);\r\n}\r\nexport const formCurrency = new Intl.NumberFormat('pt-BR', {\r\n  style: 'decimal',\r\n  maximumFractionDigits :2,\r\n  minimumFractionDigits :2\r\n})\r\nexport function currency(float: string) {\r\n  let value = float.toString();\r\n  value = value.replace(/\\D/g, \"\");\r\n  value = value.replace(/(\\d)(\\d{2})$/, \"$1,$2\");\r\n  value = value.replace(/(?=(\\d{3})+(\\D))\\B/g, \".\");\r\n  return value;\r\n}\r\nexport function currencyFloat(float: number) {\r\n  let value = float.toString();\r\n  value = value.replace(/\\D/g, \"\");\r\n  value = value.replace(/(\\d)(\\d{2})$/, \"$1,$2\");\r\n  value = value.replace(/(?=(\\d{3})+(\\D))\\B/g, \".\");\r\n  return value;\r\n}\r\n\r\nexport function getDate() {\r\n  var today = new Date();\r\n  return today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);\r\n}\r\nexport function getDateBRFormat(data: string) {\r\n  var ano = data.split('-')[0];\r\n  var mes = data.split('-')[1];\r\n  let dia = data.split('-')[2];\r\n  return `${dia}/${mes}/${ano}`\r\n}\r\n\r\n","import { formCurrency, getFloatMoney } from \"./functions\"\r\n\r\ninterface RPV {\r\n  initialFees: string,\r\n  lawyerName: string,\r\n  clientName: string,\r\n  clientCPF: string,\r\n  courtroom: string,\r\n  processNumber: string,\r\n  totalValue: string,\r\n  valuePercentFees: string,\r\n  qtdBenefits: string,\r\n  typeBenefit: string,\r\n  valueBenefits: string,\r\n  discountValue: string,\r\n  discountType: string,\r\n  date: string,\r\n  percentBenefit: string,\r\n  surveydate: string,\r\n  totalBenefits: string\r\n\r\n}\r\n\r\n\r\nexport function getContractFees(data: RPV) {\r\n  let percent = parseFloat(data.valuePercentFees)\r\n  let total = getFloatMoney(data.totalValue)\r\n  let result = parseFloat(total)\r\n\r\n  result = ((result * percent) / 100)\r\n\r\n  return formCurrency.format(result)\r\n}\r\n\r\n\r\nexport function getBenefits(data: RPV) {\r\n  let value = parseFloat(getFloatMoney(data.valueBenefits))\r\n  let percent = parseFloat(getFloatMoney(data.percentBenefit))\r\n  let qtd = parseInt(data.qtdBenefits)\r\n  let result = 0\r\n  if (data.typeBenefit == '%') {\r\n    result = (qtd * value) \r\n    //return formCurrency.format(result)\r\n  }\r\n  if (data.typeBenefit == 'R$') {\r\n    result = (qtd * value)\r\n    //return formCurrency.format(result)\r\n  }\r\n  return formCurrency.format(result)\r\n}\r\n\r\nexport function getDisconts(data: RPV) {\r\n  let totalDiscount = 0.00\r\n  if (data.discountType == \"R$\") {\r\n    totalDiscount = parseFloat(getFloatMoney(data.discountValue))\r\n  }\r\n  if (data.discountType == \"%\") {\r\n    let benefits = parseFloat(getFloatMoney(getBenefits(data)))\r\n    let fees = parseFloat(getFloatMoney(getContractFees(data)))\r\n    let initial = parseFloat(getFloatMoney(data.initialFees))\r\n    let discont = parseFloat(getFloatMoney(data.discountValue))\r\n    totalDiscount = (benefits + fees + initial) * discont / 100\r\n  }\r\n  return formCurrency.format(totalDiscount)\r\n}\r\n\r\nexport function getFinalBalanceFees(data: RPV) {\r\n  let benefits = parseFloat(getFloatMoney(getBenefits(data)))\r\n  let fees = parseFloat(getFloatMoney(getContractFees(data)))\r\n  let initial = parseFloat(getFloatMoney(data.initialFees))\r\n  let discount = parseFloat(getFloatMoney(getDisconts(data)))\r\n  return formCurrency.format(benefits+fees+initial-discount)\r\n}\r\n\r\nexport function getFinalBalanceRPV(data: RPV) {\r\n  let fees = parseFloat(getFloatMoney(getFinalBalanceFees(data)))\r\n  let total = parseFloat(getFloatMoney(data.totalValue))\r\n  return formCurrency.format(total-fees)\r\n}\r\n\r\n\r\nexport function getDateExtense(date:string){\r\n  let ano_informado = date.split('-')[0];\r\n  let mes_informado = date.split('-')[1];\r\n  let dia_informado = date.split('-')[2];\r\n  return dia_informado + \" de \" + getMes(parseInt(mes_informado)) + \" de \" + ano_informado \r\n}\r\nexport function getDateFormatBR(date:string ){\r\n  let ano_informado = date.split('-')[0];\r\n  let mes_informado = date.split('-')[1];\r\n  let dia_informado = date.split('-')[2];\r\n  return dia_informado + \"/\" + mes_informado+ \"/\" + ano_informado \r\n}\r\n\r\n\r\nexport function getMes(mes:number){\r\n  let mess\r\n  switch (mes){\r\n    case 1: return \"Janeiro\";     break;\r\n    case 2: mess = \"Fevereiro\"; break;\r\n    case 3: mess = \"Março\";     break;\r\n    case 4: mess = \"Abril\";     break;\r\n    case 5: mess = \"Maio\";        break;\r\n    case 6: mess = \"Junho\";     break;\r\n    case 7: mess = \"Julho\";     break;\r\n    case 8: mess = \"Agosto\";     break;\r\n    case 9: mess = \"Setembro\";     break;\r\n    case 10: mess = \"Outubro\";     break;\r\n    case 11: mess = \"Novembro\"; break;\r\n    case 12: mess = \"Dezembro\"; break;\r\n  }\r\n  return mess\r\n}","//import React from \"react\";\r\nimport pdfmake from \"pdfmake/build/pdfmake\"\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\r\nimport extenso from \"extenso\"\r\nimport { getBenefits, getContractFees, getDateExtense, getDateFormatBR, getDisconts, getFinalBalanceFees, getFinalBalanceRPV } from \"../../service/RPV\";\r\nimport { currency, getDate } from \"../../service/functions\";\r\nimport { TDocumentDefinitions } from \"pdfmake/interfaces\";\r\n\r\nvar dia_informado ;\r\nvar mes_informado ;\r\nvar ano_informado ;\r\n\r\ninterface RPV {\r\n  initialFees: string,\r\n  lawyerName: string,\r\n  clientName: string,\r\n  clientCPF: string,\r\n  courtroom: string,\r\n  processNumber: string,\r\n  totalValue: string,\r\n  valuePercentFees: string,\r\n  qtdBenefits: string,\r\n  typeBenefit: string,\r\n  valueBenefits: string,\r\n  discountValue: string,\r\n  discountType: string,\r\n  date: string,\r\n  percentBenefit: string,\r\n  surveydate: string,\r\n  totalBenefits: string\r\n\r\n}\r\n\r\n\r\nfunction Report(data:RPV) {\r\n    const descontoline =  [\r\n      { text: 'Descontos',height:[50]  },\r\n      {\r\n        text: `- R$  ${getDisconts(data)} `,\r\n        bold: true, alignment: 'justify'\r\n      }\r\n    ]\r\n\r\n    const feesContractQTD =[\r\n      { text: '\\nHonorários contratados'},\r\n      { lineHeight: 1.5, text: `${data.valuePercentFees}%    referente    aos    valores    atrasados    +    ${data.qtdBenefits}   benefícios    (art.    13    tabela    de    honorários    OAB/MG)`, bold: true, alignment: 'justify' }\r\n    ]\r\n    const feesContractPercent =[\r\n      { text: '\\nHonorários contratados'},\r\n      { lineHeight: 1.5, text: `${data.valuePercentFees}%    referente    aos    valores    atrasados    +    ${data.percentBenefit}%   de    ${data.qtdBenefits}    parcelas    vicendas   (art.    13    tabela    de    honorários    OAB/MG)`, bold: true, alignment: 'justify' }\r\n    ]\r\n    const table1 = [\r\n      ['HONORÁRIOS', '']\r\n      ,\r\n      \r\n      [\r\n        { text: 'Honorários advocaticios iniciais' }, { text: `  R$ ${data.initialFees}`, bold: true, alignment: 'justify' }\r\n      ],\r\n      [\r\n        { text: 'Honorários advocaticios finais',height:[50]  },\r\n        {\r\n          text: `  R$  ${getContractFees(data)} + ${getBenefits(data)}`,\r\n          bold: true, alignment: 'justify'\r\n        }\r\n      ],\r\n      [\r\n        { text: 'Saldo final' },\r\n        { text: `  R$ ${getFinalBalanceFees(data)}`, bold: true, alignment: 'justify' }\r\n      ],\r\n    ]\r\n\r\n    data.typeBenefit == \"%\" && table1.splice(1,0,feesContractPercent);\r\n    data.typeBenefit == \"R$\" && table1.splice(1,0,feesContractQTD);\r\n    parseFloat(getDisconts(data)) != 0 && table1.splice(4,0,descontoline);\r\n  pdfmake.vfs = pdfFonts.pdfMake.vfs\r\n  \r\n \r\n\r\n  interface Docdefinition {\r\n    pageSixe: string,\r\n    fontSize: number,\r\n    PageMargins: [],\r\n    content: [],\r\n  }\r\n\r\n  const docDefinitions: TDocumentDefinitions = {\r\n    pageSize: 'A4',\r\n    content: [\r\n      {\r\n        text: 'ADVOCACIA',\r\n        fontSize: 25,\r\n        bold: true,\r\n        margin: [20, 0, 0, 0]\r\n      },\r\n      {\r\n        text: 'Mateus Augusto Silva – OAB/MG 119.571\\n Fillipe André Souza Freitas – OAB/MG 119.584\\n',\r\n        alignment: 'right',\r\n        margin: [0, -13, 0, 0]\r\n      },\r\n      '_______________________________________________________________________________________________\\n\\n',\r\n      {\r\n        text: 'R E C I B O – PRESTAÇÃO DE CONTAS\\n',\r\n        alignment: 'center',\r\n        fontSize: 14,\r\n        bold: true\r\n      },\r\n      {\r\n        text: '\\nDADOS DO CLIENTE:',\r\n        bold: true,\r\n        decoration: 'underline'\r\n      },\r\n      `NOME:  ${data.clientName.toUpperCase()}`,\r\n      `CPF:  ${data.clientCPF}`,\r\n      {\r\n        text: '\\nDADOS DO PROCESSO:',\r\n        bold: true,\r\n        decoration: 'underline'\r\n      },\r\n      `${data.courtroom}`,\r\n      {\r\n        text: [\r\n          { text: '\\nProcesso número:', bold: true },\r\n          `  ${data.processNumber}`\r\n        ],\r\n      },\r\n      {\r\n        text: '\\nREFERENTE:',\r\n        bold: true,\r\n        decoration: 'underline'\r\n      },\r\n      \"Prestação de serviços advocatícios referentes à atuação em processo previdenciário que figura como parte contrária o Instituto Nacional do Seguro Social – INSS.\\n\\n\",\r\n      {\r\n        table: {\r\n          widths: [\"40%\", \"60%\"],\r\n          body: table1\r\n        },\r\n      },\r\n      '\\n\\n',\r\n      {\r\n        table: {\r\n          widths: [\"40%\", \"20%\", \"20%\", \"20%\"],\r\n          body: [\r\n            [\r\n              {\r\n                text: 'CRÉDITOS', bold: true\r\n              },\r\n              { text: 'Crédito', bold: true },\r\n              { text: 'Débito', bold: true },\r\n              { text: 'Saldo', bold: true }],\r\n            [\r\n              `Valor levantado (RPV) data ${getDateFormatBR(data.surveydate)}`,\r\n              { text: `R$  ${currency(data.totalValue)}`, bold: true },\r\n              { text: `R$  ${getFinalBalanceFees(data)}`, bold: true },\r\n              { text: `R$  ${getFinalBalanceRPV(data)}`, bold: true }\r\n            ],\r\n          ]\r\n        },\r\n      },\r\n      '\\n\\n',\r\n      {\r\n        alignment:'justify',\r\n        text:[`Declaro, que no dia ${getDateFormatBR(data.date)}, recebi o valor de `,{bold: true, text:`R$ ${getFinalBalanceRPV(data)}`},` (${extenso(getFinalBalanceRPV(data), { mode: 'currency' })}), referente ao valor líquido residual levantado no processo previdenciário acima citado, pagos pelo ${data.lawyerName}, através de cheque nominal, pelo que, dou plena e geral quitação em relação aos valores supra mencionados.`]},\r\n      '\\n',\r\n      { text: `Montes Claros/MG, ${getDateExtense(data.date)}.`, alignment: 'center' },\r\n      '\\n\\n\\n\\n',\r\n      {\r\n        alignment: 'center',\r\n        fontSize:9.5,\r\n        columns: [\r\n          {\r\n            text: `____________________________________\\n ${data.clientName}\\n${data.clientCPF}`\r\n          },\r\n          {\r\n            text: `____________________________________\\n SILVA E FREITAS\\nSOCIEDADE DE ADVOGADOS\\nOABMG  3.818 `\r\n          },\r\n        ]\r\n      }\r\n    ],\r\n  }\r\n  \r\n  pdfmake.createPdf(docDefinitions).download()\r\n}\r\n\r\nexport default Report;\r\n","export default __webpack_public_path__ + \"static/media/warning.af655eca.svg\";","export default __webpack_public_path__ + \"static/media/back.27c96268.svg\";","export default __webpack_public_path__ + \"static/media/sf-logo-min.1d998c36.svg\";","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport backIcon from \"../../assets/images/icons/back.svg\"\r\nimport logoMin from \"../../assets/images/sf-logo-min.svg\"\r\n\r\nimport \"./styles.css\"\r\n\r\ninterface PageHeaderProps {\r\n  title: string;\r\n  description?: string;\r\n}\r\n\r\nconst PageHeader:React.FC<PageHeaderProps> = (props) => {\r\n  return (\r\n    <header className=\"page-header\">\r\n        <div className=\"top-bar-container\">\r\n          <Link to=\"/\">\r\n            <img src={backIcon} alt=\"voltar\" />\r\n          </Link>\r\n          <img src={logoMin} alt=\"\" />\r\n        </div>\r\n        \r\n        <div className=\"header-content\">\r\n          <strong>{props.title}</strong>\r\n          {props.description && <p>{props.description}</p>}\r\n        </div>\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default PageHeader;","import React, { SelectHTMLAttributes }from \"react\";\r\n\r\nimport \"./styles.css\"\r\n\r\ninterface SelectProps extends SelectHTMLAttributes<HTMLSelectElement>{\r\n  label?: string;\r\n  name: string;\r\n  defaultOption?: string;\r\n  options: Array<{\r\n    value:string;\r\n    label:string;\r\n  }>\r\n}\r\n\r\nconst Select:React.FC<SelectProps> = ({label, name, defaultOption, options, ...rest}) => {\r\n  return (\r\n    <div className=\"select-block\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select  id={name} {...rest}>\r\n        <option value=\"\" disabled hidden>\r\n          {defaultOption ? defaultOption : 'Selecione uma opção'}\r\n        </option>\r\n        {options.map(option => {\r\n          return <option key={option.value} value={option.value}>{option.label}</option>\r\n        })}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select;","import React, { FormEvent, useState } from \"react\";\r\nimport Input from \"../../components/input\";\r\nimport Report from \"../../components/report\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { Divider, Steps } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport { getFloatMoney, currency, getDate, getDateBRFormat, currencyFloat, formCurrency } from \"../../service/functions\";\r\n\r\nimport warning from \"../../assets/images/icons/warning.svg\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\n\r\nimport \"./styles.css\"\r\nimport Select from \"../../components/Select\";\r\nimport { contractFees } from \"../../service/contractFees\";\r\nimport { getContractFees, getBenefits, getDisconts, getFinalBalanceFees, getFinalBalanceRPV} from \"../../service/RPV\";\r\n\r\n\r\n\r\n function RPVGenerate() {\r\n  const [page, setPage] = useState(1);\r\n  const [date, setDate] = useState(getDate);\r\n  const [surveydate, setSurveyDate] = useState('');\r\n  const [typeBenefit, setTypeBenefit] = useState('');\r\n  const [percentBenefit, setPercentBenefit] = useState('');\r\n  const [lawyerName, setLawyerName] = useState('');\r\n  const [clientName, setClientName] = useState('');\r\n  const [clientCPF, setClientCPF] = useState('');\r\n  const [courtroom, setCourtroom] = useState('');\r\n  const [processNumber, setProcessNumber] = useState('');\r\n  const [totalValue, setTotalvalue] = useState('');\r\n  const [valuePercentFees, setValuePercentFees] = useState('');\r\n  const [qtdBenefits, setQtdBenefits] = useState('');\r\n  const [valueBenefits, setValueBenefits] = useState('');\r\n  const [initialFees, setInitialFees] = useState('0,00');\r\n  const [discountValue, setDiscountValue] = useState('0');\r\n  const [discountType, setDiscountType] = useState('');\r\n  const [totalBenefits, setTotalBenefits] = useState('');\r\n\r\n  function discountValueReal(value: string, type: string) {\r\n    let valor = getFloatMoney(value)\r\n    if (parseFloat(value) == 0)\r\n      return 0\r\n    if (type === \"R$\")\r\n      return formCurrency.format(parseFloat(valor));\r\n    else {\r\n      let contratcts = getFloatMoney(contractFees(valuePercentFees, totalValue))\r\n      let benefits = getFloatMoney(getBenefits(data))\r\n      let valorra = contratcts+benefits\r\n      //let tipo = ((parseFloat(discountValue) / 100) * parseFloat(getFloatMoney(totalValue))).toFixed(2)\r\n      return valorra\r\n    }\r\n    //contractFees(valuePercentFees, totalValue)}+\r\n    //{getBenefits(typeBenefit,valueBenefits, percentBenefit, qtdBenefits)\r\n  }\r\n\r\n  const data = {\r\n    initialFees,\r\n    lawyerName,\r\n    clientName,\r\n    clientCPF,\r\n    courtroom,\r\n    processNumber,\r\n    totalValue,\r\n    valuePercentFees,\r\n    qtdBenefits,\r\n    typeBenefit,\r\n    valueBenefits,\r\n    discountValue,\r\n    discountType,\r\n    date,\r\n    percentBenefit,\r\n    surveydate,\r\n    totalBenefits\r\n  }\r\n  function createRPV(e: FormEvent) {\r\n    e.preventDefault()\r\n    Report(data);\r\n  }\r\n  \r\n  function OnBoardingFive() {\r\n    return (\r\n      <div className=\"step5\">\r\n        <fieldset>\r\n          <legend>Confirme as informações</legend>\r\n          <div className=\"fild\">\r\n            <label>Data:</label><label className=\"result\">{getDateBRFormat(date)}</label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Advogado:</label><label className=\"result\">{lawyerName}</label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Cliente:</label><label className=\"result\">{clientName}</label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>CPF do cliente:</label><label className=\"result\">{clientCPF}</label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Vara do processo:</label><label className=\"result\">{courtroom}</label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Numero do processo:</label><label className=\"result\">{processNumber}</label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Valor da RPV:</label><label className=\"result\">R$ {totalValue}</label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Data do levantamento:</label><label className=\"result\">{getDateBRFormat(surveydate)}</label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Honorários contratados:</label>\r\n            <label className=\"result\">\r\n              {valuePercentFees}% de {totalValue} = {getContractFees(data)}\r\n            </label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Benefícios:</label>\r\n            <label className=\"result\">\r\n              {typeBenefit==='%' && <p>{percentBenefit}%  ({qtdBenefits} x R$ {currency(parseFloat(valueBenefits).toFixed(2))})</p>}\r\n              {typeBenefit==='R$' && <p>{qtdBenefits} x R$ {currency(getFloatMoney(valueBenefits))}</p>} = \r\n              {getBenefits(data)}\r\n            </label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Honorários advocatícios iniciais:</label>\r\n            <label className=\"result\">R$\r\n              {currency(getFloatMoney(initialFees))}\r\n            </label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Honorários advocatícios finais:</label>\r\n            <label className=\"result\">\r\n              {getContractFees(data)} + {getBenefits(data)}   {parseFloat(initialFees) > 0 && <span> + {initialFees}</span>}\r\n              \r\n\r\n            </label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Descontos:</label><label className=\"result\">\r\n              {discountType === \"%\" && `${discountValue}% = `}\r\n              R$\r\n              {getDisconts(data)}\r\n            </label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Saldo final dos honorários:</label><label className=\"result\">R$\r\n              {getFinalBalanceFees(data)}\r\n            </label>\r\n          </div>\r\n          <div className=\"fild\">\r\n            <label>Saldo final da RPV: </label><label className=\"result\">R$\r\n              {getFinalBalanceRPV(data)}\r\n            </label>\r\n          </div>\r\n\r\n\r\n        </fieldset>\r\n      </div>\r\n    )\r\n  }\r\n  function goNextStep() {\r\n    if (page === 6) return;\r\n    setPage(page => page + 1)\r\n  }\r\n  function goBeforeStep() {\r\n    if (page === 1) return;\r\n    setPage(page => page - 1)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"page-rpv-generate\">\r\n      <PageHeader\r\n        title=\"Gerar novo RPV\"\r\n        description=\"O primeiro passo é preencher o formulario de RPV abaixo.\"\r\n      />\r\n\r\n      <form onSubmit={createRPV}>\r\n        <main>\r\n          <div>\r\n            <div id=\"step-bar-progress\">\r\n              <Steps current={page - 1}>\r\n                <Steps.Item />\r\n                <Steps.Item />\r\n                <Steps.Item />\r\n                <Steps.Item />\r\n                <Steps.Item />\r\n                <Steps.Item />\r\n              </Steps>\r\n            </div>\r\n\r\n            {page === 1 && <div className=\"step1\">\r\n              <fieldset>\r\n                <legend>Data do acerto</legend>\r\n                <Input type=\"date\" name=\"date\" label=\"Data do acerto\" value={date} onChange={(e) => { setDate(e.target.value) }} />\r\n              </fieldset>\r\n              <fieldset>\r\n                <legend>Advogado</legend>\r\n                <Select\r\n                  name=\"lawyerName\"\r\n                  defaultOption=\"Selecione um advogado\"\r\n                  value={lawyerName}\r\n                  onChange={(e) => { setLawyerName(e.target.value) }}\r\n                  options={[\r\n                    { value: 'Dr. Mateus Augusto Silva Amaral', label: \"Dr.  Mateus Augusto Silva Amaral\" },\r\n                    { value: 'Dr. Fillipe André Souza Freitas', label: \"Dr.  Fillipe André Souza Freitas\" },\r\n                    { value: 'Dra. Cristiane Fonseca da Silva', label: \"Dra. Cristiane Fonseca da Silva\" },\r\n                    { value: 'Dr. Filipe Meira Martins', label: \"Dr.  Filipe Meira Martins\" },\r\n                    { value: 'Dra. Mariana Oliveira Lafetá', label: \"Dra. Mariana Oliveira Lafetá\" },\r\n                    { value: 'Dra. Maria Clara Souza', label: \"Dra. Maria Clara Souza\" },\r\n                    { value: 'Dra. Ana Paula Sousa', label: \"Dra. Ana Paula Sousa\" },\r\n                  ]}\r\n                />\r\n              </fieldset>\r\n\r\n              <fieldset>\r\n                <legend>Dados do cliente</legend>\r\n                <Input name=\"clientName\" label=\"Nome\" value={clientName} onChange={(e) => { setClientName(e.target.value) }} />\r\n                <div className=\"input-block\">\r\n                  <label htmlFor=\"processNumber\">CPF</label>\r\n                  <NumberFormat format=\"###.###.###-##\" name=\"clientCPF\" label=\"CPF\" value={clientCPF} onChange={(e) => { setClientCPF(e.target.value) }} />\r\n                </div>\r\n              </fieldset>\r\n            </div>}\r\n\r\n            {page === 2 && <div className=\"step2\">\r\n              <fieldset>\r\n                <legend>Dados do processo</legend>\r\n\r\n                <Select\r\n                  name=\"courtroom\"\r\n                  label=\"Vara do processo\"\r\n                  value={courtroom}\r\n                  onChange={(e) => { setCourtroom(e.target.value) }}\r\n                  options={[\r\n                    { value: 'PJe-MG 1º Grau', label: 'PJe-MG 1º Grau' },\r\n                    { value: 'PJe-MG 2º Grau', label: 'PJe-MG 2º Grau' },\r\n                    { value: 'PJe-MG 3º Grau', label: 'PJe-MG 3º Grau' },\r\n                    { value: '1ª Vara do Juizado Especial Federal de Montes Claros/MG', label: '1ª Vara do Juizado Especial Federal de Montes Claros/MG' },\r\n                    { value: '2ª Vara do Juizado Especial Federal de Montes Claros/MG', label: '2ª Vara do Juizado Especial Federal de Montes Claros/MG' },\r\n                    { value: '3ª Vara do Juizado Especial Federal de Montes Claros/MG', label: '3ª Vara do Juizado Especial Federal de Montes Claros/MG' },\r\n                  ]}\r\n                />\r\n                <div className=\"input-block\">\r\n                  <label htmlFor=\"processNumber\">Numero do processo</label>\r\n                  <NumberFormat format=\"#######-##.####.#.##.####\" name=\"processNumber\" label=\"Numero do processo\" value={processNumber} onChange={(e) => { setProcessNumber(e.target.value) }} />\r\n                </div>\r\n\r\n              </fieldset>\r\n            </div>}\r\n\r\n            {page === 3 && <div className=\"step3\">\r\n              <fieldset>\r\n                <legend>Valor da RPV</legend>\r\n                <div className=\"input-block\">\r\n                  <label htmlFor=\"totalValue\">Valor total da RPV</label>\r\n                  <div className=\"input-currency\">\r\n                    <input id=\"prefix\" value=\"R$\" disabled />\r\n                    <NumberFormat\r\n                      className=\"input-value\"\r\n                      decimalSeparator=','\r\n                      thousandSeparator=\".\"\r\n                      name=\"totalvalue\"\r\n                      label=\"Valor Total\"\r\n                      value={totalValue}\r\n                      onChange={(e) => { setTotalvalue(e.target.value) }}\r\n\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <Input type=\"date\" name=\"surveyDate\" label=\"Data do levanatamento\" value={surveydate} onChange={(e) => { setSurveyDate(e.target.value) }} />\r\n\r\n              </fieldset>\r\n\r\n            </div>}\r\n            {page === 4 && <div className=\"step4\">\r\n\r\n              <fieldset>\r\n                <legend>Honorários</legend>\r\n                <div className=\"block-fees\">\r\n                  <Input name=\"descriptionFees\" label=\"descrição\" value=\"Porcentagem dos honorários advocatícios\" disabled />\r\n                  <div className=\"input-block\">\r\n                    <label htmlFor=\"valueBenefits\">Valor em %</label>\r\n                    <div className=\"input-currency\">\r\n                      <input id=\"prefix\" value=\"%\" disabled />\r\n                      <NumberFormat isNumericString={true} className=\"input-value\" name=\"valuePercentFees\" value={valuePercentFees} onChange={(e) => { setValuePercentFees(e.target.value) }} />\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"initial-fees\">\r\n                  <Input name=\"initialFees\" label=\"descrição\" value=\"honorários advocatícios iniciais\" disabled />\r\n                  <div className=\"input-block\">\r\n                    <label htmlFor=\"valueBenefits\">Valor em R$</label>\r\n                    <div className=\"input-currency\">\r\n                      <input id=\"prefix\" value=\"R$\" disabled />\r\n                      <NumberFormat\r\n                        className=\"input-value\"\r\n                        decimalSeparator=','\r\n                        thousandSeparator=\".\"\r\n                        decimalScale={2}\r\n                        name=\"valueInitialFees\"\r\n                        label=\"Valor unitario\"\r\n                        value={initialFees}\r\n                        onChange={(e) => { setInitialFees(e.target.value) }}\r\n                      />\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset>\r\n                <legend>Benefícios</legend>\r\n                <Select\r\n                  id=\"selectTypeDiscount\"\r\n                  name=\"discountType\"\r\n                  label=\"Selecione o tipo de benefícios\"\r\n                  value={typeBenefit}\r\n                  onChange={(e) => { setTypeBenefit(e.target.value) }}\r\n                  options={[\r\n                    { value: \"R$\", label: 'Benefício por quantidade' },\r\n                    { value: \"%\", label: 'Benefício por de parcelas vicendas' },\r\n                  ]}\r\n                />\r\n                {typeBenefit === \"%\" &&\r\n                  <div className=\"block-benefits-percent\">\r\n                    <Input name=\"parcentBenefits\" label=\"% do benefício\" value={percentBenefit} onChange={(e) => { setPercentBenefit(e.target.value) }}/>\r\n                    <Input name=\"qtdBenefits\" label=\"Quant. parcelas vicendas\" value={qtdBenefits} onChange={(e) => { setQtdBenefits(e.target.value) }} />\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"valueBenefits\">Valor unitário da parcela</label>\r\n                      <div className=\"input-currency\">\r\n                        <input id=\"prefix\" value=\"R$\" disabled />\r\n                        <NumberFormat\r\n                          className=\"input-value\"\r\n                          decimalSeparator=','\r\n                          thousandSeparator=\".\"\r\n                          name=\"valueBenefits\"\r\n                          label=\"Valor unitario\"\r\n                          value={valueBenefits}\r\n                          onChange={(e) => { setValueBenefits(e.target.value) }}\r\n                        />\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                }\r\n\r\n                {typeBenefit === \"R$\" &&\r\n                  <div id=\"block-benefits\">\r\n                  <Input name=\"qtdBenefits\" label=\"Quantidade de benefícios\" value={qtdBenefits} onChange={(e) => { setQtdBenefits(e.target.value) }} />\r\n                  <div className=\"input-block\">\r\n                    <label htmlFor=\"valueBenefits\">Valor unitário do benefício</label>\r\n                    <div className=\"input-currency\">\r\n                      <input id=\"prefix\" value=\"R$\" disabled />\r\n                      <NumberFormat\r\n                        className=\"input-value\"\r\n                        decimalSeparator=','\r\n                        thousandSeparator=\".\"\r\n                        name=\"valueBenefits\"\r\n                        label=\"Valor unitario\"\r\n                        value={valueBenefits}\r\n                        onChange={(e) => { setValueBenefits(e.target.value) }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                }\r\n\r\n                \r\n              </fieldset>\r\n            </div>}\r\n            {page === 5 && <div className=\"step4\">\r\n              <fieldset>\r\n                <legend>\r\n                  Descontos\r\n                </legend>\r\n\r\n                <Select\r\n                  id=\"selectTypeDiscount\"\r\n                  name=\"discountType\"\r\n                  label=\"O desconto é em R$(reais) ou %(porcentagem)\"\r\n                  value={discountType}\r\n                  onChange={(e) => { setDiscountType(e.target.value) }}\r\n                  options={[\r\n                    { value: \"R$\", label: 'R$' },\r\n                    { value: \"%\", label: '%' },\r\n                  ]}\r\n                />\r\n                <div className=\"input-block\">\r\n                  <label>Valor</label>\r\n                  <div className=\"input-currency\">\r\n                    <NumberFormat\r\n                      decimalSeparator={\",\"}\r\n                      thousandSeparator={\".\"}\r\n                      decimalScale={2}\r\n                      name=\"discountValue\"\r\n                      label=\"valor\"\r\n                      value={discountValue}\r\n                      onChange={(e) => { setDiscountValue(e.target.value) }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n\r\n              </fieldset>\r\n            </div>}\r\n            {page === 6 && <OnBoardingFive />}\r\n\r\n\r\n          </div>\r\n                  \r\n          <footer>\r\n            {page === 1 && <p><img src={warning} alt=\"aviso importante!\" />Importante! <br />Preencha todos os campos</p>}\r\n            {page !== 1 && <button onClick={goBeforeStep} type=\"button\" id=\"btn-next\">Voltar</button>}\r\n            {page !== 6 && <button onClick={goNextStep} type=\"button\" id=\"btn-next\">Proximo</button>}\r\n            {page === 6 && <button type=\"submit\">Gerar RPV</button>}\r\n\r\n          </footer>\r\n          <div className=\"warn\">\r\n            {page !== 1 && <p><img src={warning} alt=\"aviso importante!\" />Importante! <br />Preencha todos os campos</p>}\r\n          </div>\r\n\r\n        </main>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RPVGenerate;","import React, { FormEvent, useState } from \"react\";\r\nimport Input from \"../../components/input\";\r\nimport Report from \"../../components/report\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { Steps } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\n\r\nimport warning from \"../../assets/images/icons/warning.svg\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\n\r\nimport \"./styles.css\"\r\nimport Select from \"../../components/Select\";\r\n\r\n\r\n\r\nfunction RPVSearch() {\r\n  const [page, setPage] = useState(0)\r\n  const [date, setDate] = useState('');\r\n  const [lawyerName, setLawyerName] = useState('');\r\n  const [clientName, setClientName] = useState('');\r\n  const [clientCPF, setClientCPF] = useState('');\r\n  const [courtroom, setCourtroom] = useState('');\r\n  const [processNumber, setProcessNumber] = useState('');\r\n  const [totalValue, setTotalvalue] = useState('');\r\n  const [valuePercentFees, setValuePercentFees] = useState('');\r\n  const [qtdBenefits, setQtdBenefits] = useState('');\r\n  const [valueBenefits, setValueBenefits] = useState('');\r\n  const [initialFees, setInitialFees] = useState('0,00');\r\n  const [discountValue, setDiscountValue] = useState('0');\r\n  const [discountType, setDiscountType] = useState('');\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"page-rpv-generate\">\r\n      <PageHeader\r\n        title=\"Pesquisar RPV\"\r\n        description=\"Página em construção.\"\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RPVSearch;","import React from \"react\";\r\nimport { BrowserRouter, Route} from \"react-router-dom\"\r\nimport Landing from \"./pages/Landing\";\r\nimport RPVGenerator from \"./pages/RPVGenerator\";\r\nimport RPVSearch from \"./pages/RPVSearch\";\r\n\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path=\"/\" exact component={Landing} />\r\n      <Route path=\"/rpv-generate\" component={RPVGenerator} />\r\n      <Route path=\"/rpv-search\" component={RPVSearch} />\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\n\nimport './assets/styles/global.css';\n\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}